{"ast":null,"code":"var _jsxFileName = \"/home/incudy/projektkacper/HerokuFrontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport 'tachyons';\nimport Clarifai from 'clarifai';\nimport ImageHistory from './components/ImageHistory/ImageHistory';\n/*\n\nconst app = new Clarifai.App({\n apiKey: process.env.API_CLARIFAI\n});\n\n*/\n\nconst app = new Clarifai.App({\n  apiKey: '0d982bd5416d42eb872af454475fee9e'\n});\n/* const uri = 'https://hidden-cove-88698.herokuapp.com'; */\n\nconst uri = 'http://localhost:3001';\nconst particlesOptions = {\n  particles: {\n    line_linked: {\n      number: {\n        value: 50,\n        densitiy: {\n          enable: true,\n          value_area: 800\n        }\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  users: [],\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch(uri + '/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).then(console.log(res.entries)).then(this.fetchRank()).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n      fetch(uri + '/imagedb', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          imageurl: this.state.input,\n          name: this.state.user.name\n        })\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    this.fetchRank();\n  }\n\n  fetchRank() {\n    console.log('fetching users');\n    fetch(uri + '/score', {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(users => this.setState({\n      users\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageUrl = _this$state.imageUrl,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      users: this.state.users,\n      fetchRank: this.fetchRank,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(ImageHistory, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })) : route === 'signin' ? React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/incudy/projektkacper/HerokuFrontend/src/App.js"],"names":["React","Navigation","Logo","ImageLinkForm","FaceRecognition","SignIn","Register","Rank","Particles","Clarifai","ImageHistory","app","App","apiKey","uri","particlesOptions","particles","line_linked","number","value","densitiy","enable","value_area","initialState","input","imageUrl","box","route","users","isSignedIn","user","id","name","email","entries","joined","Component","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","console","log","res","fetchRank","catch","err","imageurl","onRouteChange","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js'\nimport 'tachyons';\nimport Clarifai from 'clarifai';\nimport ImageHistory from './components/ImageHistory/ImageHistory';\n\n\n/*\n\nconst app = new Clarifai.App({\n apiKey: process.env.API_CLARIFAI\n});\n\n*/\nconst app = new Clarifai.App({\n apiKey: '0d982bd5416d42eb872af454475fee9e'\n});\n\n\n/* const uri = 'https://hidden-cove-88698.herokuapp.com'; */\n \n   const uri = 'http://localhost:3001';\n\nconst particlesOptions = {\n\tparticles: {\n\t\tline_linked: {\n\t\tnumber: {\n\t\t\tvalue: 50,\n\t\t\t\tdensitiy: {\n\t\t\t\t\tenable: true,\n\t\t\t\t\tvalue_area: 800\n\t\t\t}\n\t\t\t\t}\n\t}\n}\n}\n\n\n\nconst initialState = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      users: [],\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n\n  \n\n\t\tclass App extends React.Component {\n constructor() {\n    super();\n    this.state = initialState;\n    }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n\ncomponentDidMount() {\n    this.fetchRank();\n  }\n\n\n calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n\nonInputChange = (event) => {\n\tthis.setState({input: event.target.value});\n}\n\nfetchRank() {\n  console.log('fetching users');\n  fetch(uri + '/score', {\n        method: 'get',\n        headers: {'Content-Type': 'application/json'},\n            })\n            .then(response => response.json())\n            .then(users => this.setState({users}))\n      .catch(err => console.log(err));\n}\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models.predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input).then(response => {\n          if(response) {\n            fetch(uri + '/image', {\n        method: 'put',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n        id: this.state.user.id\n      })\n            })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count}))\n              })         \n              .then(console.log(res.entries))      \n            .then(this.fetchRank())\n            .catch(console.log)\n          }\n               this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n\n\n       fetch(uri + '/imagedb', {\n      method: 'put',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        imageurl: this.state.input,\n        name: this.state.user.name\n              })\n    })\n  }\n\n\n onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n         <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? <div>\n              <Logo />\n              <Rank\n                users={this.state.users}\n                fetchRank={this.fetchRank}\n              />\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n              <ImageHistory />\n            </div>\n          : (\n             route === 'signin'\n             ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}